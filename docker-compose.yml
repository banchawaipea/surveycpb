version: "3.9"

services:
   project:
      build:
         context: .
         dockerfile: Dockerfile_web.dev
      command: python3 manage.py runserver 0.0.0.0:8000
      volumes:
        - .:/app
      ports:
        - 8001:8000
      env_file:
        - .env
      restart: "on-failure"
      # depends_on:
      #   - postgres-db
      # networks:
      #   - project-network
        
  #  nginx-proxy-manager:
  #   image: 'jc21/nginx-proxy-manager:latest'
  #   restart: unless-stopped
  #   ports:
  #     # These ports are in format <host-port>:<container-port>
  #     - '80:80' # Public HTTP Port
  #     - '443:443' # Public HTTPS Port
  #     - '81:81' # Admin Web Port
  #     # Add any other Stream port you want to expose
  #     # - '21:21' # FTP

  #   # Uncomment the next line if you uncomment anything in the section
  #   environment:
  #     # Uncomment this if you want to change the location of 
  #     # the SQLite DB file within the container
  #     DB_SQLITE_FILE: "/data/database.sqlite"

  #     # Uncomment this if IPv6 is not enabled on your host
  #     # DISABLE_IPV6: 'true'

  #   volumes:
  #     - ./npm/data:/data
  #     - ./npm/letsencrypt:/etc/letsencrypt

   # proxy:
   #    image: nginx:1.19-alpine
   #    ports:
   #       - 80:80
   #       - 443:443
   #    volumes:
   #       - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
   #       - ./ssl:/etc/nginx/ssl
   #    restart: always
   #    networks:
   #       - project-network

   # postgres-db:
   #    image: kartoza/postgis:12.0
   #    ports:
   #       - 5430:5430
   #    volumes:
   #       - ./postgres:/var/lib/postgresql
   #    environment:
   #       - POSTGRES_USER=${POSTGRES_USER}
   #       - POSTGRES_PASS=${POSTGRES_PASS}
   #       - POSTGRES_DBNAME=${POSTGRES_DBNAME}
   #    restart: "on-failure"
      
   
   # nginx:
   #    restart: always
   #    depends_on:
   #       - project
   #    build:
   #       context: ./nginx
   #       dockerfile: Dockerfile.dev
   #    ports:
   #       - 80:80
   #       - 443:443
   #    networks:
   #       - project-network
   
# networks:
#    project-network:
#       driver : bridge

volumes:
   postgres_data: